[{"E:\\Games\\My-project\\startup-summer\\src\\index.tsx":"1","E:\\Games\\My-project\\startup-summer\\src\\App.tsx":"2","E:\\Games\\My-project\\startup-summer\\src\\components\\page\\Home\\Home.tsx":"3","E:\\Games\\My-project\\startup-summer\\src\\components\\page\\Error\\Error.tsx":"4","E:\\Games\\My-project\\startup-summer\\src\\components\\Api\\getApiUser.ts":"5","E:\\Games\\My-project\\startup-summer\\src\\components\\Api\\getApiRepo.ts":"6","E:\\Games\\My-project\\startup-summer\\src\\components\\PaginateButton.tsx":"7"},{"size":387,"mtime":1650905022659,"results":"8","hashOfConfig":"9"},{"size":376,"mtime":1652805199167,"results":"10","hashOfConfig":"9"},{"size":8666,"mtime":1652969103864,"results":"11","hashOfConfig":"9"},{"size":506,"mtime":1652891709793,"results":"12","hashOfConfig":"9"},{"size":520,"mtime":1652966483133,"results":"13","hashOfConfig":"9"},{"size":445,"mtime":1652545787366,"results":"14","hashOfConfig":"9"},{"size":1670,"mtime":1652805199175,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"keox8c",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Games\\My-project\\startup-summer\\src\\index.tsx",[],[],[],"E:\\Games\\My-project\\startup-summer\\src\\App.tsx",[],[],"E:\\Games\\My-project\\startup-summer\\src\\components\\page\\Home\\Home.tsx",["39","40","41","42","43"],[],"import React, { FC, useEffect, useState } from \"react\";\r\nimport style from './Home.module.scss';\r\nimport Kitten from '../../image/Vector.svg'\r\nimport Imag from '../../image/image.jpg'\r\nimport ImagBig from '../../image/imageBig.png'\r\nimport Union from '../../image/Union.png'\r\nimport Followers from '../../image/followers.png'\r\nimport Following from '../../image/following.png'\r\nimport Uniondel from '../../image/Uniondel.png'\r\nimport getApiRepo, { IRepo } from \"../../Api/getApiRepo\";\r\nimport getApiUser, { IUser }from \"../../Api/getApiUser\";\r\nimport PaginateButton from \"../../PaginateButton\";\r\n\r\n\r\nconst Home: FC = () => {\r\n    const [loader, setLoader] = useState(false);\r\n    const [userName, setUserName] = useState<string>(\"\");\r\n    const [input, setUnput] = useState<string>(\"\");\r\n    const [user, setUser] = useState<IUser | null>(null);\r\n    const [repo, setRepo] = useState<IRepo[] | null>(null);\r\n    const [currentPage, setCurrentPage] = useState<number>(0);\r\n    const [showRepo, setShowRepo] = useState<number>(4);\r\n    const lastRepoIndex = (currentPage + 1) * showRepo;\r\n    const ferstRepoIndex =  lastRepoIndex - showRepo;\r\n    const pageNumber = Math.ceil(repo?.length! / showRepo);\r\n    const currentRepo = repo?.slice(ferstRepoIndex, lastRepoIndex);\r\n    console.log(loader);\r\n    \r\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setUnput(event.target.value);\r\n    };\r\n\r\n    const keyPressHandle = (event: React.KeyboardEvent) => {\r\n        if (event.key === \"Enter\") {\r\n            setUserName(input);\r\n        }  \r\n    };\r\n\r\n    const getApiUserInfo = async () => {\r\n        const user = await getApiUser(userName);\r\n        setUser(user);\r\n        \r\n    };\r\n    \r\n    const getApiRepoAll = async () => {\r\n        const repo = await getApiRepo(userName);\r\n        setRepo(repo);\r\n\r\n    };\r\n    \r\n\r\n    const hanldeOnChange = (event: any) => {\r\n        setCurrentPage(event.selected)     \r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        if (userName) {\r\n            getApiUserInfo();\r\n            getApiRepoAll();\r\n            setLoader(true);\r\n           \r\n        }\r\n\r\n        if (userName ===  user?.login) {\r\n            getApiUserInfo();\r\n            getApiRepoAll();\r\n            setLoader(true);\r\n      \r\n        }\r\n\r\n    },[userName, user?.login, loader]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (userName) {\r\n            setLoader(false)\r\n           \r\n        }\r\n\r\n        if (userName ===  user?.login) {\r\n            setLoader(false)\r\n      \r\n        }\r\n\r\n    },[loader]);\r\n\r\n    return (<>\r\n            <div className={style.headerContainer}>\r\n                <div className={style.header}>\r\n                    <img className={style.imgGit} src={Kitten} alt=\"icon\" />\r\n                    <div  className={style.search}>\r\n                        <button className={style.btn}>\r\n                            <img className={style.img} src={Imag} alt=\"foto\" />\r\n                        </button>\r\n                        <input \r\n                            onKeyPress={keyPressHandle} \r\n                            onChange={handleOnChange}\r\n                            className={style.inputHeader} type=\"text\" \r\n                            placeholder=\"Enter GitHub username\"\r\n                        />\r\n                    </div>     \r\n                </div>\r\n            </div>\r\n            <div className={style.home}>    \r\n                <div className={style.main}>\r\n\r\n                    {userName === \"\" && (<>\r\n                        <img className={style.searchBig} src={ImagBig} alt=\"icon\" />\r\n                        <h2 className={style.title}>Start with searching a GitHub user</h2>\r\n                    </>)}\r\n                    \r\n                    {userName !== \"\" && userName !==  user?.login && (<>\r\n                        <img className={style.Union} src={Union} alt=\"icon\"/>\r\n                        <h2 className={style.titleSecond}>User not found</h2>\r\n                    </> )}\r\n\r\n\r\n                    {loader && <div className={style.main}><p className={style.loader}></p></div>}\r\n\r\n                    {userName ===  user?.login && (<div className={style.pageUser}>\r\n                                <div key={user.id} className={style.userContainer} >\r\n                                    <img className={style.imgAvatar} src={user.avatar_url} alt=\"foto\" />\r\n                                    <div className={style.smallUserContainer}>\r\n                                        <p className={style.userName}>{user.name}</p>\r\n                                        <a href={user.html_url} target=\"_blank\" className={style.userLogin}>{user.login}</a>\r\n                                        <div className={style.followersContainer}>\r\n                                            <p className={style.followers}>\r\n                                                <img src={Followers} alt=\"icon\" />\r\n                                                {user.followers > 1000 \r\n                                                ?\r\n                                                (user.followers/1000).toFixed(1) + 'k' \r\n                                                : user.followers\r\n                                                } followers\r\n                                            </p>\r\n                                            <p className={style.following}>\r\n                                                <img src={Following} alt=\"icon\" />\r\n                                                {user.following} following\r\n                                            </p>\r\n                                        </div>\r\n                                    </div> \r\n                                </div>\r\n                                \r\n                    {user.public_repos \r\n                                ?\r\n                                    <div className={style.containerFull}>\r\n                                        <p className={style.numberRepo}>Repositories ({user.public_repos})</p>\r\n                                        {repo && (<>\r\n                                            <div className={style.containerRepoFull}>\r\n                                                {currentRepo!.map(item => (<>\r\n                                                        <div key={item.id} className={style.repo}>\r\n                                                            <a className={style.repoTittle} href={item.html_url} target=\"_blank\">{item.name}</a>\r\n                                                            <p className={style.repoDescription}>{item.description}</p>\r\n                                                        </div>\r\n                                                </>))}\r\n                                                <div className={style.containerRepo}>\r\n                                                    <div className={style.containerRepoInfo}>\r\n                                                        <p className={style.repoNumber}>{ferstRepoIndex + 1}-{lastRepoIndex} of {user.public_repos} items</p>\r\n                                                    </div>\r\n                                                    <div> \r\n                                                        <PaginateButton \r\n                                                            initialPage={0}\r\n                                                            pageRangeDisplayed={3}\r\n                                                            pageCount={pageNumber}\r\n                                                            marginPagesDisplayed={1}\r\n                                                            onChange={(set) => hanldeOnChange(set)}\r\n                                                        />\r\n                                                    </div> \r\n                                                </div>  \r\n                                            </div>\r\n                                        </>)}\r\n                                    </div> \r\n                                : \r\n                                    <div className={style.containerInfoEmty}>\r\n                                        <div className={style.emtyContainer}>\r\n                                            <img className={style.emptyIcon} src={Uniondel} alt=\"icon\" />\r\n                                            <h2 className={style.emptyText}>Repository list is empty</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    }\r\n                    </div>)}    \r\n                </div>\r\n            </div>\r\n        </>);\r\n    };\r\nexport default Home;\r\n","E:\\Games\\My-project\\startup-summer\\src\\components\\page\\Error\\Error.tsx",[],[],"E:\\Games\\My-project\\startup-summer\\src\\components\\Api\\getApiUser.ts",[],[],"E:\\Games\\My-project\\startup-summer\\src\\components\\Api\\getApiRepo.ts",[],[],"E:\\Games\\My-project\\startup-summer\\src\\components\\PaginateButton.tsx",[],[],{"ruleId":"44","severity":1,"message":"45","line":22,"column":22,"nodeType":"46","messageId":"47","endLine":22,"endColumn":33},{"ruleId":"48","severity":1,"message":"49","line":72,"column":7,"nodeType":"50","endLine":72,"endColumn":38,"suggestions":"51"},{"ruleId":"48","severity":1,"message":"52","line":86,"column":7,"nodeType":"50","endLine":86,"endColumn":15,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":126,"column":41,"nodeType":"56","messageId":"57","endLine":126,"endColumn":109,"fix":"58"},{"ruleId":"54","severity":1,"message":"55","line":152,"column":61,"nodeType":"56","messageId":"57","endLine":152,"endColumn":130,"fix":"59"},"@typescript-eslint/no-unused-vars","'setShowRepo' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getApiRepoAll' and 'getApiUserInfo'. Either include them or remove the dependency array.","ArrayExpression",["60"],"React Hook useEffect has missing dependencies: 'user?.login' and 'userName'. Either include them or remove the dependency array.",["61"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"62","text":"63"},{"range":"64","text":"63"},{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},[4636,4636]," rel=\"noreferrer\"",[6455,6455],"Update the dependencies array to be: [userName, user?.login, loader, getApiUserInfo, getApiRepoAll]",{"range":"69","text":"70"},"Update the dependencies array to be: [loader, user?.login, userName]",{"range":"71","text":"72"},[2288,2319],"[userName, user?.login, loader, getApiUserInfo, getApiRepoAll]",[2530,2538],"[loader, user?.login, userName]"]